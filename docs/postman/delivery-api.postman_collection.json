{
	"info": {
		"_postman_id": "507d9cda-db44-4de5-b697-eaf8a702052f",
		"name": "delivery-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41689102"
	},
	"item": [
		{
			"name": "/login - Авторизация",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"admin@example.com\",\r\n  \"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/login",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"login"
					]
				},
				"description": "Запрос для аутентификации пользователя и получения токена для дальнейшего взаимодействия с защищёнными маршрутами API. Параметры запроса содержат данные пользователя (email и пароль), на основе которых система выполняет проверку и возвращает токен, если авторизация успешна.\n\n**Параметры запроса (Body):**\n\n- **email** (string, обязательный) — Адрес электронной почты пользователя.\n    \n- **password** (string, обязательный) — Пароль пользователя.\n    \n\n**Ответ:**\n\n- **200 OK**  \n    Если данные правильные, возвращает токен для доступа к защищённым маршрутам."
			},
			"response": []
		},
		{
			"name": "/couriers - Создание курьера",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"courier_type\": \"bike\",\r\n  \"regions\": [1, 2, 3],\r\n  \"working_hours\": [\"09:00-12:00\", \"14:00-18:00\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/couriers",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"couriers"
					]
				},
				"description": "Запрос для создания нового курьера. В теле запроса необходимо указать тип курьера, регионы его работы и рабочие часы.\n\n**Параметры запроса (Body):**\n\n- **courier_type** (string, обязательный) — Тип курьера (например, \"bike\", \"car\" и т. д.).\n    \n- **regions** (array, обязательный) — Список регионов, в которых курьер будет работать (указывается как массив ID регионов).\n    \n- **working_hours** (array, обязательный) — Массив рабочих часов курьера. Каждый элемент в массиве представляет собой строку, например, \"09:00-12:00\".\n    \n\n**Ответ:**\n\n- **201 Created**  \n    Если курьер успешно создан, возвращается информация о созданном курьере."
			},
			"response": []
		},
		{
			"name": "/couriers/{id} - Получение информации о курьере",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1,\r\n  \"courier_type\": \"bike\",\r\n  \"regions\": [1, 2, 3],\r\n  \"working_hours\": [\"09:00-12:00\", \"14:00-18:00\"]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/couriers/1",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"couriers",
						"1"
					]
				},
				"description": "Запрос для получения информации о курьере по его уникальному идентификатору (ID). Ответ содержит подробности о типе курьера, регионах, в которых он работает, и его рабочем графике.\n\n**Параметры запроса (URL):**\n\n- **id** (integer, обязательный) — Уникальный идентификатор курьера, информацию о котором нужно получить.\n    \n\n**Ответ:**\n\n- **200 OK**  \n    Если курьер с указанным ID найден, возвращается информация о курьере.\n    \n- **404 Not Found**  \n    Если курьер с указанным ID не найден."
			},
			"response": []
		},
		{
			"name": "/orders— Создание нового заказа",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"weight\": 5.5,\r\n    \"region\": 2,\r\n    \"delivery_hours\": [\"10:00-12:00\", \"15:00-18:00\"],\r\n    \"courier_id\": 1,  // Идентификатор курьера\r\n    \"assigned_at\": \"2025-02-01T18:32:33\", // Время назначения\r\n    \"completed_at\": null\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/orders",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"orders"
					]
				},
				"description": "Этот запрос позволяет создать новый заказ в системе. Он принимает информацию о весе, регионе, часах доставки, идентификаторе курьера, времени назначения и завершения.\n\n#### Параметры запроса:\n\n| Параметр | Тип | Описание | Пример |\n| --- | --- | --- | --- |\n| `weight` | float | Вес заказа | 5.5 |\n| `region` | int | Идентификатор региона | 2 |\n| `delivery_hours` | array | Массив строк с интервалами доставки | `[\"10:00-12:00\", \"15:00-18:00\"]` |\n| `courier_id` | int | Идентификатор курьера (опционально) | 1 |\n| `assigned_at` | string | Время назначения заказа в формате ISO 8601 | `\"2025-02-01T18:32:33\"` |\n| `completed_at` | string | Время завершения заказа (можно оставить `null`) | `null` |\n\n  \n**Ответ:**\n\nЕсли заказ создан успешно, сервер вернет объект заказа с его данными.\n\n#### Ошибки:\n\n- **400 Bad Request**: Если в запросе отсутствуют обязательные параметры или данные в неверном формате.\n    \n- **404 Not Found**: Если указанный курьер не существует в базе данных."
			},
			"response": []
		},
		{
			"name": "/orders/assign — Назначение заказа курьеру",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"courier_id\": 1,\r\n  \"order_id\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/orders/assign",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"orders",
						"assign"
					]
				},
				"description": "Этот запрос назначает заказ конкретному курьеру. После успешного выполнения запроса в заказе устанавливается `courier_id`, а также метка времени `assigned_at`.\n\n#### **Параметры запроса:**\n\n| Параметр | Тип | Описание | Пример |\n| --- | --- | --- | --- |\n| `courier_id` | int | Идентификатор курьера, которому назначается заказ | `1` |\n| `order_id` | int | Идентификатор заказа | `1` |\n\n#### **Ответ:**\n\nЕсли заказ успешно назначен курьеру, сервер вернет обновленный объект заказа:\n\n``` json\n{\n    \"data\": {\n        \"id\": 1,\n        \"weight\": 5.5,\n        \"region\": 2,\n        \"delivery_hours\": [\n            \"10:00-12:00\",\n            \"15:00-18:00\"\n        ],\n        \"courier_id\": 1,\n        \"assigned_at\": \"2025-02-01T18:41:44.000000Z\",\n        \"completed_at\": \"2025-02-01T15:30:00.000000Z\",\n        \"created_at\": \"2025-02-01T16:19:20.000000Z\",\n        \"updated_at\": \"2025-02-01T18:41:44.000000Z\"\n    }\n}\n\n\n ```\n\n#### **Ошибки:**\n\n- **400 Bad Request** — если переданы некорректные данные.\n    \n- **404 Not Found** — если заказ или курьер не найдены в базе данных.\n    \n- **409 Conflict** — если заказ уже назначен другому курьеру.\n    \n\n#### **Дополнительные условия:**\n\n- `assigned_at` автоматически заполняется текущей датой и временем.\n    \n- Если заказ уже был назначен, этот запрос перезапишет предыдущие данные."
			},
			"response": []
		},
		{
			"name": "/orders/complete — Завершение заказа",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"order_id\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/orders/complete",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"orders",
						"complete"
					]
				},
				"description": "Этот запрос завершает заказ, устанавливая в нем метку времени `completed_at`. После этого заказ считается выполненным.\n\n#### **Параметры запроса:**\n\n| Параметр | Тип | Описание | Пример |\n| --- | --- | --- | --- |\n| `order_id` | int | Идентификатор заказа | `1` |\n| `completed_at` | string (ISO 8601) | (Необязательно) Дата и время завершения заказа. Если не указано, устанавливается текущее время. | `\"2025-02-01T19:00:00Z\"` |\n\n#### **Ошибки:**\n\n- **400 Bad Request** — если переданы некорректные данные.\n    \n- **404 Not Found** — если заказ не найден.\n    \n- **409 Conflict** — если заказ уже завершен."
			},
			"response": []
		}
	]
}